D G "__PCM__" 0 29 ""5.079""
D G "__DEVICE__" 0 29 "84"
D G "__DATE__" 0 29 ""24-Sep-18""
D G "__TIME__" 0 29 ""12:42:02""
D G "_UNICODE" 0 29 ""?""
D G "__EVAL" 0 29 ""?"" "Standard Header file for the PIC16F84A device ////////////////"
c L "set_tris_a" 1 3 6 "FUNCTION"
f N "set_tris_a" 1 35 ""
v L "value" 1 35 "int8" `54 
f B "set_tris_a" 1 35 "void(int8 value)" `53 
f N "set_tris_b" 1 36 ""
v L "value" 1 36 "int8" `56 
f B "set_tris_b" 1 36 "void(int8 value)" `55 
f N "get_tris_a" 1 37 ""
f B "get_tris_a" 1 37 "int8()" `57 
f N "get_tris_b" 1 38 ""
f B "get_tris_b" 1 38 "int8()" `58 
f N "output_a" 1 39 ""
v L "value" 1 39 "int8" `60 
f B "output_a" 1 39 "void(int8 value)" `59 
f N "output_b" 1 40 ""
v L "value" 1 40 "int8" `62 
f B "output_b" 1 40 "void(int8 value)" `61 
f N "input_a" 1 41 ""
f B "input_a" 1 41 "int8()" `63 
f N "input_b" 1 42 ""
f B "input_b" 1 42 "int8()" `64 
f N "input_change_a" 1 43 ""
f B "input_change_a" 1 43 "int8()" `65 
f N "input_change_b" 1 44 ""
f B "input_change_b" 1 44 "int8()" `66 
f N "port_b_pullups" 1 45 ""
v L "value" 1 45 "int8" `68 
f B "port_b_pullups" 1 45 "void(int8 value)" `67 
f N "input" 1 46 ""
v L "pin" 1 46 "int16" `70 
f B "input" 1 46 "int8(int16 pin)" `69 
f N "input_state" 1 47 ""
v L "pin" 1 47 "int16" `72 
f B "input_state" 1 47 "int8(int16 pin)" `71 
f N "output_low" 1 48 ""
v L "pin" 1 48 "int16" `74 
f B "output_low" 1 48 "void(int16 pin)" `73 
f N "output_high" 1 49 ""
v L "pin" 1 49 "int16" `76 
f B "output_high" 1 49 "void(int16 pin)" `75 
f N "output_toggle" 1 50 ""
v L "pin" 1 50 "int16" `78 
f B "output_toggle" 1 50 "void(int16 pin)" `77 
f N "output_bit" 1 51 ""
v L "pin" 1 51 "int16" `80 
v L "level" 1 51 "int8" `81 
f B "output_bit" 1 51 "void(int16 pin,int8 level)" `79 
f N "output_float" 1 52 ""
v L "pin" 1 52 "int16" `83 
f B "output_float" 1 52 "void(int16 pin)" `82 
f N "output_drive" 1 53 ""
v L "pin" 1 53 "int16" `85 
f B "output_drive" 1 53 "void(int16 pin)" `84  "Constants used to identify pins in the above are:"
d G "PIN_A0" 1 57 "40"
d G "PIN_A1" 1 58 "41"
d G "PIN_A2" 1 59 "42"
d G "PIN_A3" 1 60 "43"
d G "PIN_A4" 1 61 "44"
d G "PIN_B0" 1 63 "48"
d G "PIN_B1" 1 64 "49"
d G "PIN_B2" 1 65 "50"
d G "PIN_B3" 1 66 "51"
d G "PIN_B4" 1 67 "52"
d G "PIN_B5" 1 68 "53"
d G "PIN_B6" 1 69 "54"
d G "PIN_B7" 1 70 "55"
d G "FALSE" 1 73 "0"
d G "TRUE" 1 74 "1"
d G "BYTE" 1 76 "int8"
d G "BOOLEAN" 1 77 "int1"
d G "getc" 1 79 "getch"
d G "fgetc" 1 80 "getch"
d G "getchar" 1 81 "getch"
d G "putc" 1 82 "putchar"
d G "fputc" 1 83 "putchar"
d G "fgets" 1 84 "gets"
d G "fputs" 1 85 "puts"
c L "output_drive" 1 3 3 "FUNCTION"
f N "restart_cause" 1 90 ""
f B "restart_cause" 1 90 "int8()" `86 
f N "reset_cpu" 1 91 ""
f B "reset_cpu" 1 91 "void()" `87 
f N "sleep" 1 92 ""
f B "sleep" 1 92 "void()" `88  "Constants returned from RESTART_CAUSE() are:"
d G "WDT_FROM_SLEEP" 1 94 "3"
d G "WDT_TIMEOUT" 1 95 "11"
d G "MCLR_FROM_SLEEP" 1 96 "16"
d G "MCLR_FROM_RUN" 1 97 "27"
d G "NORMAL_POWER_UP" 1 98 "27"
d G "BROWNOUT_RESTART" 1 99 "26"
c L "sleep" 1 3 5 "FUNCTION"
f N "setup_timer_0" 1 107 ""
v L "mode" 1 107 "int8" `90 
f B "setup_timer_0" 1 107 "void(int8 mode)" `89 
f N "set_timer0" 1 108 ""
v L "value" 1 108 "int8" `92 
f B "set_timer0" 1 108 "void(int8 value)" `91 
f N "get_timer0" 1 109 ""
f B "get_timer0" 1 109 "int8()" `93 
f N "setup_counters" 1 110 ""
v L "mode" 1 110 "int8" `95 
v L "prescaler" 1 110 "int8" `96 
f B "setup_counters" 1 110 "void(int8 mode,int8 prescaler)" `94 
f N "set_rtcc" 1 111 ""
v L "value" 1 111 "int8" `98 
f B "set_rtcc" 1 111 "void(int8 value)" `97 
f N "get_rtcc" 1 112 ""
f B "get_rtcc" 1 112 "int8()" `99  "Constants used for SETUP_TIMER_0() are:"
d G "T0_INTERNAL" 1 114 "0"
d G "T0_EXT_L_TO_H" 1 115 "32"
d G "T0_EXT_H_TO_L" 1 116 "48"
d G "T0_DIV_1" 1 118 "8"
d G "T0_DIV_2" 1 119 "0"
d G "T0_DIV_4" 1 120 "1"
d G "T0_DIV_8" 1 121 "2"
d G "T0_DIV_16" 1 122 "3"
d G "T0_DIV_32" 1 123 "4"
d G "T0_DIV_64" 1 124 "5"
d G "T0_DIV_128" 1 125 "6"
d G "T0_DIV_256" 1 126 "7"
d G "T0_8_BIT" 1 129 "0"
d G "RTCC_INTERNAL" 1 133 "0"
d G "RTCC_EXT_L_TO_H" 1 134 "32"
d G "RTCC_EXT_H_TO_L" 1 135 "48"
d G "RTCC_DIV_1" 1 136 "8"
d G "RTCC_DIV_2" 1 137 "0"
d G "RTCC_DIV_4" 1 138 "1"
d G "RTCC_DIV_8" 1 139 "2"
d G "RTCC_DIV_16" 1 140 "3"
d G "RTCC_DIV_32" 1 141 "4"
d G "RTCC_DIV_64" 1 142 "5"
d G "RTCC_DIV_128" 1 143 "6"
d G "RTCC_DIV_256" 1 144 "7"
d G "RTCC_8_BIT" 1 145 "0"
c L "get_rtcc" 1 3 8 "FUNCTION"
f N "setup_wdt" 1 156 ""
v L "mode" 1 156 "int16" `101 
f B "setup_wdt" 1 156 "void(int16 mode)" `100 
f N "restart_wdt" 1 157 ""
f B "restart_wdt" 1 157 "void()" `102  "Constants used for SETUP_WDT() are:"
d G "WDT_18MS" 1 160 "8"
d G "WDT_36MS" 1 161 "9"
d G "WDT_72MS" 1 162 "10"
d G "WDT_144MS" 1 163 "11"
d G "WDT_288MS" 1 164 "12"
d G "WDT_576MS" 1 165 "13"
d G "WDT_1152MS" 1 166 "14"
d G "WDT_2304MS" 1 167 "15"
c L "restart_wdt" 1 3 3 "FUNCTION"
f N "abs" 1 175 ""
v L "x" 1 175 "sint8" `104 
f B "abs" 1 175 "sint8(sint8 x)" `103 
f N "abs" 1 176 ""
v L "x" 1 176 "sint16" `106 
f B "abs" 1 176 "sint16(sint16 x)" `105 
f N "abs" 1 177 ""
v L "x" 1 177 "sint32" `108 
f B "abs" 1 177 "sint32(sint32 x)" `107 
f N "abs" 1 178 ""
v L "x" 1 178 "float" `110 
f B "abs" 1 178 "float(float x)" `109 
f N "_mul" 1 179 ""
v L "??65535" 1 179 "int8" `112 
v L "??65535" 1 179 "int8" `113 
f B "_mul" 1 179 "int16(int8 ,int8 )" `111 
f N "_mul" 1 180 ""
v L "??65535" 1 180 "sint8" `115 
v L "??65535" 1 180 "sint8" `116 
f B "_mul" 1 180 "sint16(sint8 ,sint8 )" `114 
f N "_mul" 1 181 ""
v L "??65535" 1 181 "int16" `118 
v L "??65535" 1 181 "int16" `119 
f B "_mul" 1 181 "int32(int16 ,int16 )" `117 
f N "_mul" 1 182 ""
v L "??65535" 1 182 "sint16" `121 
v L "??65535" 1 182 "sint16" `122 
f B "_mul" 1 182 "sint32(sint16 ,sint16 )" `120  "Memory Manipulation Prototypes:"
f N "read_bank" 1 185 ""
v L "bank" 1 185 "int8" `124 
v L "offset" 1 185 "int8" `125 
f B "read_bank" 1 185 "int8(int8 bank,int8 offset)" `123 
f N "write_bank" 1 186 ""
v L "bank" 1 186 "int8" `127 
v L "offset" 1 186 "int8" `128 
v L "value" 1 186 "int8" `129 
f B "write_bank" 1 186 "void(int8 bank,int8 offset,int8 value)" `126 
f N "strcpy" 1 187 ""
v L "dest" 1 187 "*int8" `131 
v L "src" 1 187 "*int8" `132 
f B "strcpy" 1 187 "void(*int8 dest,*int8 src)" `130 
f N "memset" 1 188 ""
v L "destination" 1 188 "*int8" `134 
v L "value" 1 188 "int8" `135 
v L "num" 1 188 "int16" `136 
f B "memset" 1 188 "void(*int8 destination,int8 value,int16 num)" `133 
f N "memcpy" 1 189 ""
v L "destination" 1 189 "*int8" `138 
v L "source" 1 189 "*int8" `139 
v L "num" 1 189 "int16" `140 
f B "memcpy" 1 189 "void(*int8 destination,*int8 source,int16 num)" `137  "String Prototypes:"
f N "toupper" 1 192 ""
v L "cvalue" 1 192 "int8" `142 
f B "toupper" 1 192 "int8(int8 cvalue)" `141 
f N "tolower" 1 193 ""
v L "cvalue" 1 193 "int8" `144 
f B "tolower" 1 193 "int8(int8 cvalue)" `143 
f N "sprintf" 1 194 ""
v L "string" 1 194 "*int8" `146 
v L "cstring" 1 194 "*int8" `147 
f B "sprintf" 1 194 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `145  "Data Manipulators Prototypes:"
f N "shift_left" 1 197 ""
v L "address" 1 197 "*int8" `150 
v L "bytes" 1 197 "int8" `151 
v L "value" 1 197 "int8" `152 
f B "shift_left" 1 197 "int8(*int8 address,int8 bytes,int8 value)" `149 
f N "shift_right" 1 198 ""
v L "address" 1 198 "*int8" `154 
v L "bytes" 1 198 "int8" `155 
v L "value" 1 198 "int8" `156 
f B "shift_right" 1 198 "int8(*int8 address,int8 bytes,int8 value)" `153 
f N "rotate_left" 1 199 ""
v L "address" 1 199 "*int8" `158 
v L "bytes" 1 199 "int8" `159 
f B "rotate_left" 1 199 "void(*int8 address,int8 bytes)" `157 
f N "rotate_right" 1 200 ""
v L "address" 1 200 "*int8" `161 
v L "bytes" 1 200 "int8" `162 
f B "rotate_right" 1 200 "void(*int8 address,int8 bytes)" `160 
f N "swap" 1 201 ""
v L "value" 1 201 "int8" `164 
f B "swap" 1 201 "void(int8 value)" `163 
f N "make8" 1 202 ""
v L "var" 1 202 "int16" `166 
v L "offset" 1 202 "int8" `167 
f B "make8" 1 202 "int8(int16 var,int8 offset)" `165 
f N "make8" 1 203 ""
v L "var" 1 203 "int32" `169 
v L "offset" 1 203 "int8" `170 
f B "make8" 1 203 "int8(int32 var,int8 offset)" `168 
f N "make16" 1 204 ""
v L "varhigh" 1 204 "int8" `172 
v L "varlow" 1 204 "int8" `173 
f B "make16" 1 204 "int16(int8 varhigh,int8 varlow)" `171 
f N "make32" 1 205 ""
v L "var1" 1 205 "int16" `175 
f B "make32" 1 205 "int32(int16 var1)" `174 
f N "make32" 1 206 ""
v L "var1" 1 206 "int16" `177 
v L "var2" 1 206 "int16" `178 
f B "make32" 1 206 "int32(int16 var1,int16 var2)" `176 
f N "make32" 1 207 ""
v L "var1" 1 207 "int16" `180 
v L "var2" 1 207 "int8" `181 
f B "make32" 1 207 "int32(int16 var1,int8 var2)" `179 
f N "make32" 1 208 ""
v L "var1" 1 208 "int16" `183 
v L "var2" 1 208 "int8" `184 
v L "var3" 1 208 "int8" `185 
f B "make32" 1 208 "int32(int16 var1,int8 var2,int8 var3)" `182 
f N "make32" 1 209 ""
v L "var1" 1 209 "int8" `187 
f B "make32" 1 209 "int32(int8 var1)" `186 
f N "make32" 1 210 ""
v L "var1" 1 210 "int8" `189 
v L "var2" 1 210 "int8" `190 
f B "make32" 1 210 "int32(int8 var1,int8 var2)" `188 
f N "make32" 1 211 ""
v L "var1" 1 211 "int8" `192 
v L "var2" 1 211 "int8" `193 
v L "var3" 1 211 "int8" `194 
f B "make32" 1 211 "int32(int8 var1,int8 var2,int8 var3)" `191 
f N "make32" 1 212 ""
v L "var1" 1 212 "int8" `196 
v L "var2" 1 212 "int8" `197 
v L "var3" 1 212 "int8" `198 
v L "var4" 1 212 "int8" `199 
f B "make32" 1 212 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `195 
f N "make32" 1 213 ""
v L "var1" 1 213 "int8" `201 
v L "var2" 1 213 "int16" `202 
f B "make32" 1 213 "int32(int8 var1,int16 var2)" `200 
f N "make32" 1 214 ""
v L "var1" 1 214 "int8" `204 
v L "var2" 1 214 "int16" `205 
v L "var3" 1 214 "int8" `206 
f B "make32" 1 214 "int32(int8 var1,int16 var2,int8 var3)" `203 
f N "make32" 1 215 ""
v L "var1" 1 215 "int8" `208 
v L "var2" 1 215 "int8" `209 
v L "var3" 1 215 "int16" `210 
f B "make32" 1 215 "int32(int8 var1,int8 var2,int16 var3)" `207 
f N "bit_set" 1 216 ""
v L "var" 1 216 "int8" `212 
v L "bit" 1 216 "int8" `213 
f B "bit_set" 1 216 "void(int8 var,int8 bit)" `211 
f N "bit_set" 1 217 ""
v L "var" 1 217 "int16" `215 
v L "bit" 1 217 "int8" `216 
f B "bit_set" 1 217 "void(int16 var,int8 bit)" `214 
f N "bit_set" 1 218 ""
v L "var" 1 218 "int32" `218 
v L "bit" 1 218 "int8" `219 
f B "bit_set" 1 218 "void(int32 var,int8 bit)" `217 
f N "bit_clear" 1 219 ""
v L "var" 1 219 "int8" `221 
v L "bit" 1 219 "int8" `222 
f B "bit_clear" 1 219 "void(int8 var,int8 bit)" `220 
f N "bit_clear" 1 220 ""
v L "var" 1 220 "int16" `224 
v L "bit" 1 220 "int8" `225 
f B "bit_clear" 1 220 "void(int16 var,int8 bit)" `223 
f N "bit_clear" 1 221 ""
v L "var" 1 221 "int32" `227 
v L "bit" 1 221 "int8" `228 
f B "bit_clear" 1 221 "void(int32 var,int8 bit)" `226 
f N "bit_test" 1 222 ""
v L "var" 1 222 "int8" `230 
v L "bit" 1 222 "int8" `231 
f B "bit_test" 1 222 "int8(int8 var,int8 bit)" `229 
f N "bit_test" 1 223 ""
v L "var" 1 223 "int16" `233 
v L "bit" 1 223 "int8" `234 
f B "bit_test" 1 223 "int8(int16 var,int8 bit)" `232 
f N "bit_test" 1 224 ""
v L "var" 1 224 "int32" `236 
v L "bit" 1 224 "int8" `237 
f B "bit_test" 1 224 "int8(int32 var,int8 bit)" `235  "#use delay() Prototypes:"
f N "delay_cycles" 1 227 ""
v L "count" 1 227 "int8" `239 
f B "delay_cycles" 1 227 "void(int8 count)" `238 
f N "delay_ms" 1 228 ""
v L "time" 1 228 "int16" `241 
f B "delay_ms" 1 228 "void(int16 time)" `240 
f N "delay_us" 1 229 ""
v L "time" 1 229 "int16" `243 
f B "delay_us" 1 229 "void(int16 time)" `242  "#use rs232() Prototypes:"
f N "putchar" 1 232 ""
v L "cdata" 1 232 "int8" `245 
f B "putchar" 1 232 "void(int8 cdata)" `244 
f N "putchar" 1 233 ""
v L "cdata" 1 233 "int8" `247 
v L "stream" 1 233 "int8" `248 
f B "putchar" 1 233 "void(int8 cdata,int8 stream)" `246 
f N "puts" 1 234 ""
v L "string" 1 234 "*int8" `250 
f B "puts" 1 234 "void(*int8 string)" `249 
f N "puts" 1 235 ""
v L "string" 1 235 "*int8" `252 
v L "stream" 1 235 "int8" `253 
f B "puts" 1 235 "void(*int8 string,int8 stream)" `251 
f N "getch" 1 236 ""
f B "getch" 1 236 "int8()" `254 
f N "getch" 1 237 ""
v L "stream" 1 237 "int8" `256 
f B "getch" 1 237 "int8(int8 stream)" `255 
f N "gets" 1 238 ""
v L "string" 1 238 "*int8" `258 
f B "gets" 1 238 "void(*int8 string)" `257 
f N "gets" 1 239 ""
v L "string" 1 239 "*int8" `260 
v L "stream" 1 239 "int8" `261 
f B "gets" 1 239 "void(*int8 string,int8 stream)" `259 
f N "kbhit" 1 240 ""
f B "kbhit" 1 240 "int8()" `262 
f N "kbhit" 1 241 ""
v L "stream" 1 241 "int8" `264 
f B "kbhit" 1 241 "int8(int8 stream)" `263 
f N "printf" 1 242 ""
v L "string" 1 242 "*int8" `266 
f B "printf" 1 242 "void(*int8 string,*int8 _VA_LIST)" `265 
f N "fprintf" 1 243 ""
v L "stream" 1 243 "int8" `269 
v L "string" 1 243 "*int8" `270 
f B "fprintf" 1 243 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `268 
f N "putc_send" 1 244 ""
f B "putc_send" 1 244 "void()" `272 
f N "fputc_send" 1 245 ""
v L "stream" 1 245 "int8" `274 
f B "fputc_send" 1 245 "void(int8 stream)" `273 
f N "rcv_buffer_full" 1 246 ""
f B "rcv_buffer_full" 1 246 "int8()" `275 
f N "rcv_buffer_full" 1 247 ""
v L "stream" 1 247 "int8" `277 
f B "rcv_buffer_full" 1 247 "int8(int8 stream)" `276 
f N "rcv_buffer_bytes" 1 248 ""
f B "rcv_buffer_bytes" 1 248 "int16()" `278 
f N "rcv_buffer_bytes" 1 249 ""
v L "stream" 1 249 "int8" `280 
f B "rcv_buffer_bytes" 1 249 "int16(int8 stream)" `279 
f N "tx_buffer_full" 1 250 ""
f B "tx_buffer_full" 1 250 "int8()" `281 
f N "tx_buffer_full" 1 251 ""
v L "stream" 1 251 "int8" `283 
f B "tx_buffer_full" 1 251 "int8(int8 stream)" `282 
f N "tx_buffer_bytes" 1 252 ""
f B "tx_buffer_bytes" 1 252 "int16()" `284 
f N "tx_buffer_bytes" 1 253 ""
v L "stream" 1 253 "int8" `286 
f B "tx_buffer_bytes" 1 253 "int16(int8 stream)" `285  "#use i2c() Prototypes:"
f N "i2c_read" 1 256 ""
f B "i2c_read" 1 256 "int8()" `287 
f N "i2c_read" 1 257 ""
v L "ack" 1 257 "int8" `289 
f B "i2c_read" 1 257 "int8(int8 ack)" `288 
f N "i2c_read" 1 258 ""
v L "stream" 1 258 "int8" `291 
v L "ack" 1 258 "int8" `292 
f B "i2c_read" 1 258 "int8(int8 stream,int8 ack)" `290 
f N "i2c_write" 1 259 ""
v L "data" 1 259 "int8" `294 
f B "i2c_write" 1 259 "int8(int8 data)" `293 
f N "i2c_write" 1 260 ""
v L "stream" 1 260 "int8" `296 
v L "data" 1 260 "int8" `297 
f B "i2c_write" 1 260 "int8(int8 stream,int8 data)" `295 
f N "i2c_start" 1 261 ""
f B "i2c_start" 1 261 "void()" `298 
f N "i2c_start" 1 262 ""
v L "stream" 1 262 "int8" `300 
f B "i2c_start" 1 262 "void(int8 stream)" `299 
f N "i2c_start" 1 263 ""
v L "stream" 1 263 "int8" `302 
v L "restart" 1 263 "int8" `303 
f B "i2c_start" 1 263 "void(int8 stream,int8 restart)" `301 
f N "i2c_stop" 1 264 ""
f B "i2c_stop" 1 264 "void()" `304 
f N "i2c_stop" 1 265 ""
v L "stream" 1 265 "int8" `306 
f B "i2c_stop" 1 265 "void(int8 stream)" `305 
f N "i2c_isr_state" 1 266 ""
f B "i2c_isr_state" 1 266 "int8()" `307 
f N "i2c_slaveaddr" 1 267 ""
v L "addr" 1 267 "int8" `309 
f B "i2c_slaveaddr" 1 267 "void(int8 addr)" `308 
f N "i2c_slaveaddr" 1 268 ""
v L "stream" 1 268 "int8" `311 
v L "addr" 1 268 "int8" `312 
f B "i2c_slaveaddr" 1 268 "void(int8 stream,int8 addr)" `310 
f N "i2c_poll" 1 269 ""
f B "i2c_poll" 1 269 "int8()" `313 
f N "i2c_poll" 1 270 ""
v L "stream" 1 270 "int8" `315 
f B "i2c_poll" 1 270 "int8(int8 stream)" `314 
f N "i2c_init" 1 271 ""
v L "baud" 1 271 "int32" `317 
f B "i2c_init" 1 271 "void(int32 baud)" `316 
f N "i2c_init" 1 272 ""
v L "stream" 1 272 "int8" `319 
v L "baud" 1 272 "int32" `320 
f B "i2c_init" 1 272 "void(int8 stream,int32 baud)" `318 
f N "i2c_transfer" 1 273 ""
v L "address" 1 273 "int8" `322 
v L "wData" 1 273 "*int8" `323 
v L "wCount" 1 273 "int8" `324 
f B "i2c_transfer" 1 273 "void(int8 address,*int8 wData,int8 wCount)" `321 
f N "i2c_transfer" 1 274 ""
v L "address" 1 274 "int8" `326 
v L "wData" 1 274 "*int8" `327 
v L "wCount" 1 274 "int8" `328 
v L "rData" 1 274 "*int8" `329 
v L "rCount" 1 274 "*int8" `330 
f B "i2c_transfer" 1 274 "void(int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `325 
f N "i2c_transfer" 1 275 ""
v L "stream" 1 275 "int8" `332 
v L "address" 1 275 "int8" `333 
v L "wData" 1 275 "*int8" `334 
v L "wCount" 1 275 "int8" `335 
f B "i2c_transfer" 1 275 "void(int8 stream,int8 address,*int8 wData,int8 wCount)" `331 
f N "i2c_transfer" 1 276 ""
v L "stream" 1 276 "int8" `337 
v L "address" 1 276 "int8" `338 
v L "wData" 1 276 "*int8" `339 
v L "wCount" 1 276 "int8" `340 
v L "rData" 1 276 "*int8" `341 
v L "rCount" 1 276 "*int8" `342 
f B "i2c_transfer" 1 276 "void(int8 stream,int8 address,*int8 wData,int8 wCount,*int8 rData,*int8 rCount)" `336 
f N "i2c_transfer_out" 1 277 ""
v L "address" 1 277 "int8" `344 
v L "wData" 1 277 "*int8" `345 
v L "wCount" 1 277 "int8" `346 
f B "i2c_transfer_out" 1 277 "void(int8 address,*int8 wData,int8 wCount)" `343 
f N "i2c_transfer_out" 1 278 ""
v L "stream" 1 278 "int8" `348 
v L "address" 1 278 "int8" `349 
v L "wData" 1 278 "*int8" `350 
v L "wCount" 1 278 "int8" `351 
f B "i2c_transfer_out" 1 278 "void(int8 stream,int8 address,*int8 wData,int8 wCount)" `347 
f N "i2c_transfer_in" 1 279 ""
v L "address" 1 279 "int8" `353 
v L "rData" 1 279 "*int8" `354 
v L "rCount" 1 279 "int8" `355 
f B "i2c_transfer_in" 1 279 "void(int8 address,*int8 rData,int8 rCount)" `352 
f N "i2c_transfer_in" 1 280 ""
v L "stream" 1 280 "int8" `357 
v L "address" 1 280 "int8" `358 
v L "rData" 1 280 "*int8" `359 
v L "rCount" 1 280 "int8" `360 
f B "i2c_transfer_in" 1 280 "void(int8 stream,int8 address,*int8 rData,int8 rCount)" `356  "#use spi() Prototypes:"
f N "spi_xfer" 1 283 ""
f B "spi_xfer" 1 283 "int8()" `361 
f N "spi_xfer" 1 284 ""
f G "spi_xfer" 1 284 "int16(int8 data)" `362 
f N "spi_xfer" 1 285 ""
f G "spi_xfer" 1 285 "int32(int8 data)" `362 
f N "spi_xfer" 1 286 ""
v L "data" 1 286 "int8" `363 
f B "spi_xfer" 1 286 "int8(int8 data)" `362 
f N "spi_xfer" 1 287 ""
v L "data" 1 287 "int16" `365 
f B "spi_xfer" 1 287 "int16(int16 data)" `364 
f N "spi_xfer" 1 288 ""
v L "data" 1 288 "int32" `367 
f B "spi_xfer" 1 288 "int32(int32 data)" `366 
f N "spi_xfer" 1 289 ""
v L "stream" 1 289 "int8" `369 
v L "data" 1 289 "int8" `370 
f B "spi_xfer" 1 289 "int8(int8 stream,int8 data)" `368 
f N "spi_xfer" 1 290 ""
v L "stream" 1 290 "int8" `372 
v L "data" 1 290 "int16" `373 
f B "spi_xfer" 1 290 "int16(int8 stream,int16 data)" `371 
f N "spi_xfer" 1 291 ""
v L "stream" 1 291 "int8" `375 
v L "data" 1 291 "int32" `376 
f B "spi_xfer" 1 291 "int32(int8 stream,int32 data)" `374 
f N "spi_xfer" 1 292 ""
v L "stream" 1 292 "int8" `378 
v L "data" 1 292 "int8" `379 
v L "bits" 1 292 "int8" `380 
f B "spi_xfer" 1 292 "int8(int8 stream,int8 data,int8 bits)" `377 
f N "spi_xfer" 1 293 ""
v L "stream" 1 293 "int8" `382 
v L "data" 1 293 "int16" `383 
v L "bits" 1 293 "int8" `384 
f B "spi_xfer" 1 293 "int16(int8 stream,int16 data,int8 bits)" `381 
f N "spi_xfer" 1 294 ""
v L "stream" 1 294 "int8" `386 
v L "data" 1 294 "int32" `387 
v L "bits" 1 294 "int8" `388 
f B "spi_xfer" 1 294 "int32(int8 stream,int32 data,int8 bits)" `385 
f N "spi_init" 1 295 ""
v L "baud" 1 295 "int32" `390 
f B "spi_init" 1 295 "void(int32 baud)" `389 
f N "spi_init" 1 296 ""
v L "stream" 1 296 "int8" `392 
v L "baud" 1 296 "int32" `393 
f B "spi_init" 1 296 "void(int8 stream,int32 baud)" `391 
f N "spi_speed" 1 297 ""
v L "baud" 1 297 "int32" `395 
f B "spi_speed" 1 297 "void(int32 baud)" `394 
f N "spi_speed" 1 298 ""
v L "stream" 1 298 "int8" `397 
v L "baud" 1 298 "int32" `398 
f B "spi_speed" 1 298 "void(int8 stream,int32 baud)" `396 
f N "spi_speed" 1 299 ""
v L "stream" 1 299 "int8" `400 
v L "baud" 1 299 "int32" `401 
v L "clock" 1 299 "int32" `402 
f B "spi_speed" 1 299 "void(int8 stream,int32 baud,int32 clock)" `399 
f N "spi_prewrite" 1 300 ""
v L "data" 1 300 "int8" `404 
f B "spi_prewrite" 1 300 "void(int8 data)" `403 
f N "spi_prewrite" 1 301 ""
v L "data" 1 301 "int16" `406 
f B "spi_prewrite" 1 301 "void(int16 data)" `405 
f N "spi_prewrite" 1 302 ""
v L "data" 1 302 "int32" `408 
f B "spi_prewrite" 1 302 "void(int32 data)" `407 
f N "spi_prewrite" 1 303 ""
v L "??65535" 1 303 "int8" `410 
v L "data" 1 303 "int8" `411 
f B "spi_prewrite" 1 303 "void(int8 ,int8 data)" `409 
f N "spi_prewrite" 1 304 ""
v L "??65535" 1 304 "int8" `413 
v L "data" 1 304 "int16" `414 
f B "spi_prewrite" 1 304 "void(int8 ,int16 data)" `412 
f N "spi_prewrite" 1 305 ""
v L "??65535" 1 305 "int8" `416 
v L "data" 1 305 "int32" `417 
f B "spi_prewrite" 1 305 "void(int8 ,int32 data)" `415 
f N "spi_xfer_in" 1 306 ""
f B "spi_xfer_in" 1 306 "int8()" `418 
f N "spi_xfer_in" 1 307 ""
f G "spi_xfer_in" 1 307 "int16(int8 bits)" `419 
f N "spi_xfer_in" 1 308 ""
f G "spi_xfer_in" 1 308 "int32(int8 bits)" `419 
f N "spi_xfer_in" 1 309 ""
v L "bits" 1 309 "int8" `420 
f B "spi_xfer_in" 1 309 "int8(int8 bits)" `419 
f N "spi_xfer_in" 1 310 ""
v L "bits" 1 310 "int8" `422 
f G "spi_xfer_in" 1 310 "int16(int8 bits,int8 bits)" `421 
f N "spi_xfer_in" 1 311 ""
v L "bits" 1 311 "int8" `422 
f G "spi_xfer_in" 1 311 "int32(int8 bits,int8 bits)" `421 
f N "spi_xfer_in" 1 312 ""
v L "stream" 1 312 "int8" `422 
v L "bits" 1 312 "int8" `423 
f B "spi_xfer_in" 1 312 "int8(int8 stream,int8 bits)" `421 
f N "spi_xfer_in" 1 313 ""
v L "stream" 1 313 "int8" `422 
v L "bits" 1 313 "int8" `426 
f G "spi_xfer_in" 1 313 "int16(int8 stream,int8 bits,int8 task)" `424 
f N "spi_xfer_in" 1 314 ""
v L "stream" 1 314 "int8" `422 
v L "bits" 1 314 "int8" `426 
f G "spi_xfer_in" 1 314 "int32(int8 stream,int8 bits,int8 task)" `424  "#use rtos() Prototypes:"
f N "rtos_run" 1 317 ""
f B "rtos_run" 1 317 "void(int8 stream,int8 bits,int8 task)" `424 
f N "rtos_yield" 1 318 ""
f B "rtos_yield" 1 318 "void(int8 bits,int8 task)" `425 
f N "rtos_enable" 1 319 ""
v L "task" 1 319 "int8" `427 
f B "rtos_enable" 1 319 "void(int8 task)" `426 
f N "rtos_disable" 1 320 ""
v L "task" 1 320 "int8" `429 
f B "rtos_disable" 1 320 "void(int8 task)" `428 
f N "rtos_terminate" 1 321 ""
f B "rtos_terminate" 1 321 "void()" `430 
f N "rtos_await" 1 322 ""
v L "flag" 1 322 "int8" `432 
f B "rtos_await" 1 322 "void(int8 flag)" `431 
f N "rtos_wait" 1 323 ""
v L "sem" 1 323 "int8" `434 
f B "rtos_wait" 1 323 "void(int8 sem)" `433 
f N "rtos_signal" 1 324 ""
v L "sem" 1 324 "int8" `436 
f B "rtos_signal" 1 324 "void(int8 sem)" `435 
f N "rtos_msg_send" 1 325 ""
v L "task" 1 325 "int8" `438 
v L "msg" 1 325 "int8" `439 
f B "rtos_msg_send" 1 325 "void(int8 task,int8 msg)" `437 
f N "rtos_msg_read" 1 326 ""
f B "rtos_msg_read" 1 326 "int8()" `440 
f N "rtos_msg_poll" 1 327 ""
f B "rtos_msg_poll" 1 327 "int8()" `441 
f N "rtos_overrun" 1 328 ""
v L "task" 1 328 "int8" `443 
f B "rtos_overrun" 1 328 "int8(int8 task)" `442 
f N "rtos_stats" 1 329 ""
v L "task" 1 329 "int8" `445 
v L "stat" 1 329 "*int8" `446 
f B "rtos_stats" 1 329 "void(int8 task,*int8 stat)" `444  "#use timer() Prototypes:"
f N "get_ticks" 1 332 ""
f B "get_ticks" 1 332 "int8()" `447 
f N "get_ticks" 1 333 ""
f G "get_ticks" 1 333 "int16(int8 stream)" `448 
f N "get_ticks" 1 334 ""
f G "get_ticks" 1 334 "int32(int8 stream)" `448 
f N "get_ticks" 1 335 ""
v L "stream" 1 335 "int8" `449 
f B "get_ticks" 1 335 "int8(int8 stream)" `448 
f N "get_ticks" 1 336 ""
v L "stream" 1 336 "int8" `451 
f G "get_ticks" 1 336 "int16(int8 stream)" `450 
f N "get_ticks" 1 337 ""
v L "stream" 1 337 "int8" `451 
f G "get_ticks" 1 337 "int32(int8 stream)" `450 
f N "set_ticks" 1 338 ""
v L "value" 1 338 "int8" `451 
f B "set_ticks" 1 338 "void(int8 value)" `450 
f N "set_ticks" 1 339 ""
v L "value" 1 339 "int16" `453 
f B "set_ticks" 1 339 "void(int16 value)" `452 
f N "set_ticks" 1 340 ""
v L "value" 1 340 "int32" `455 
f B "set_ticks" 1 340 "void(int32 value)" `454 
f N "set_ticks" 1 341 ""
v L "stream" 1 341 "int8" `457 
v L "value" 1 341 "int8" `458 
f B "set_ticks" 1 341 "void(int8 stream,int8 value)" `456 
f N "set_ticks" 1 342 ""
v L "stream" 1 342 "int8" `460 
v L "value" 1 342 "int16" `461 
f B "set_ticks" 1 342 "void(int8 stream,int16 value)" `459 
f N "set_ticks" 1 343 ""
v L "stream" 1 343 "int8" `463 
v L "value" 1 343 "int32" `464 
f B "set_ticks" 1 343 "void(int8 stream,int32 value)" `462  "#use pwm() Prototypes:"
f N "pwm_on" 1 346 ""
f B "pwm_on" 1 346 "void()" `465 
f N "pwm_on" 1 347 ""
v L "stream" 1 347 "int8" `467 
f B "pwm_on" 1 347 "void(int8 stream)" `466 
f N "pwm_off" 1 348 ""
f B "pwm_off" 1 348 "void()" `468 
f N "pwm_off" 1 349 ""
v L "stream" 1 349 "int8" `470 
f B "pwm_off" 1 349 "void(int8 stream)" `469 
f N "pwm_set_duty" 1 350 ""
v L "duty" 1 350 "int16" `472 
f B "pwm_set_duty" 1 350 "void(int16 duty)" `471 
f N "pwm_set_duty" 1 351 ""
v L "stream" 1 351 "int8" `474 
v L "duty" 1 351 "int16" `475 
f B "pwm_set_duty" 1 351 "void(int8 stream,int16 duty)" `473 
f N "pwm_set_duty_percent" 1 352 ""
v L "percent" 1 352 "int16" `477 
f B "pwm_set_duty_percent" 1 352 "void(int16 percent)" `476 
f N "pwm_set_duty_percent" 1 353 ""
v L "stream" 1 353 "int8" `479 
v L "percent" 1 353 "int16" `480 
f B "pwm_set_duty_percent" 1 353 "void(int8 stream,int16 percent)" `478 
f N "pwm_set_frequency" 1 354 ""
v L "frequency" 1 354 "int32" `482 
f B "pwm_set_frequency" 1 354 "void(int32 frequency)" `481 
f N "pwm_set_frequency" 1 355 ""
v L "stream" 1 355 "int8" `484 
v L "frequency" 1 355 "int32" `485 
f B "pwm_set_frequency" 1 355 "void(int8 stream,int32 frequency)" `483  "#use capture() Prototypes:"
f N "get_capture_time" 1 358 ""
f B "get_capture_time" 1 358 "int16()" `486 
f N "get_capture_time" 1 359 ""
v L "stream" 1 359 "int8" `488 
f B "get_capture_time" 1 359 "int16(int8 stream)" `487 
f N "get_capture_event" 1 360 ""
f B "get_capture_event" 1 360 "int8()" `489 
f N "get_capture_event" 1 361 ""
v L "stream" 1 361 "int8" `491 
f B "get_capture_event" 1 361 "int8(int8 stream)" `490  "Enviroment Prototypes:"
c L "get_capture_event" 1 3 2 "FUNCTION"
f N "goto_address" 1 374 ""
v L "address" 1 374 "int16" `493 
f B "goto_address" 1 374 "void(int16 address)" `492 
f N "label_address" 1 375 ""
v L "label" 1 375 "int16" `495 
f B "label_address" 1 375 "int16(int16 label)" `494  "EEPROM Prototypes:"
d G "__EEADDRESS__" 1 382 "unsigned int8"
f N "read_eeprom" 1 385 ""
v L "address" 1 385 "int8" `497 
f B "read_eeprom" 1 385 "int8(int8 address)" `496 
f N "write_eeprom" 1 386 ""
v L "address" 1 386 "int8" `499 
v L "value" 1 386 "int8" `500 
f B "write_eeprom" 1 386 "void(int8 address,int8 value)" `498  "INT"
c L "write_eeprom" 1 3 4 "FUNCTION"
f N "enable_interrupts" 1 393 ""
v L "interrupt" 1 393 "int32" `502 
f B "enable_interrupts" 1 393 "void(int32 interrupt)" `501 
f N "disable_interrupts" 1 394 ""
v L "interrupt" 1 394 "int32" `504 
f B "disable_interrupts" 1 394 "void(int32 interrupt)" `503 
f N "clear_interrupt" 1 395 ""
v L "interrupt" 1 395 "int32" `506 
f B "clear_interrupt" 1 395 "void(int32 interrupt)" `505 
f N "interrupt_active" 1 396 ""
v L "interrupt" 1 396 "int32" `508 
f B "interrupt_active" 1 396 "int8(int32 interrupt)" `507 
f N "interrupt_enabled" 1 397 ""
v L "interrupt" 1 397 "int32" `510 
f B "interrupt_enabled" 1 397 "int8(int32 interrupt)" `509 
f N "ext_int_edge" 1 398 ""
v L "source" 1 398 "int8" `512 
v L "edge" 1 398 "int8" `513 
f B "ext_int_edge" 1 398 "void(int8 source,int8 edge)" `511 
f N "jump_to_isr" 1 399 ""
v L "address" 1 399 "int16" `515 
f B "jump_to_isr" 1 399 "void(int16 address)" `514  "Constants used in EXT_INT_EDGE() are:"
d G "L_TO_H" 1 401 "0x40"
d G "H_TO_L" 1 402 "0"
d G "GLOBAL" 1 404 "0x0B80"
d G "INT_RTCC" 1 405 "0x000B20"
d G "INT_RB" 1 406 "0x00FF0B08"
d G "INT_EXT_L2H" 1 407 "0x50000B10"
d G "INT_EXT_H2L" 1 408 "0x60000B10"
d G "INT_EXT" 1 409 "0x000B10"
d G "INT_EEPROM" 1 410 "0x000B40"
d G "INT_TIMER0" 1 411 "0x000B20"
D G "retardo" 0 5 "delay_ms(250)"
F N "main" 0 7 ""
F G "main" 0 8 "void()" `521 
V L "i" 0 12 "int8" `524 
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_timer_0" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
